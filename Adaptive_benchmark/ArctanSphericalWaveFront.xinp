<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!--*************************************************************

               Arctan Spherical Wave Front


(http://math.nist.gov/cgi-bin/amr-display-problem.cgi)

-nabla^2(u) = f,   in Omega
         u  = g,   on Gamma

Omega : (0,1)^3

Exact solution: u = atan(alpha*(r-r0))
                r = sqrt((x-x0)^2 + (y-y0)^2 + (z-z0)^2)
Parameters:     (x0,y0,z0) center of the spherical wave front
                r0         radius of the cirular wave front
                alpha      controls the steepness of the wave front

Parameter Reccomendations:
   - Mild wave front
        (x0,y0,z0) = (-.05 ,-.05, -.05)
               r0  = 0.7
            alpha  = 20

   - Steep wave front
        (x0,y0,z0) = (-.05 ,-.05, -.05)
               r0  = 0.7
            alpha  = 1000

**********************************************************************-->


<simulation>

  <!-- General - geometry definitions !-->
  <geometry sets="true">
    <raiseorder patch="1" u="1" v="1" w="1"/>
    <refine     patch="1" u="7" v="7" w="7"/>
  </geometry>

  <!-- General - boundary conditions !-->
  <boundaryconditions>
    <dirichlet set="Boundary" comp="1" type="anasol"/>
  </boundaryconditions>

  <postprocessing>
    <vtfformat nu="2" nv="2" nw="2">BINARY</vtfformat>
  </postprocessing>

  <!-- Problem-specific block !-->
  <poisson>
    <source type="expression"> x0=-.05; y0=-.05; z0=-.05;  r=sqrt(pow(x-x0,2)+pow(y-y0,2)+pow(z-z0,2)); alpha=20; r0=0.7;

(alpha*(2*x - 2*x0)^2)/(4*(alpha^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2))^2 + 1)*((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(3/2)) - (3*alpha)/((alpha^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2))^2 + 1)*((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2)) + (alpha*(2*y - 2*y0)^2)/(4*(alpha^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2))^2 + 1)*((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(3/2)) + (alpha*(2*z - 2*z0)^2)/(4*(alpha^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2))^2 + 1)*((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(3/2)) - (alpha^3*(2*z - 2*z0)^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2)))/(2*(alpha^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2))^2 + 1)^2*((x - x0)^2 + (y - y0)^2 + (z - z0)^2)) - (alpha^3*(2*x - 2*x0)^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2)))/(2*(alpha^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2))^2 + 1)^2*((x - x0)^2 + (y - y0)^2 + (z - z0)^2)) - (alpha^3*(2*y - 2*y0)^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2)))/(2*(alpha^2*(r0 - ((x - x0)^2 + (y - y0)^2 + (z - z0)^2)^(1/2))^2 + 1)^2*((x - x0)^2 + (y - y0)^2 + (z - z0)^2))

    </source>
    <anasol type="expression">
      <variables> x0=-.05; y0=-.05; z0=-.05; r=sqrt(pow(x-x0,2)+pow(y-y0,2)+pow(z-z0,2)); alpha=20; r0=0.7 </variables>

      <primary>   atan(alpha*(r-r0)) </primary>
      <secondary> -(alpha*(2*x - 2*x0))*pow(2*(alpha*alpha*pow(r - r0,2)+ 1)*r*r, -0.5) |
                  -(alpha*(2*y - 2*y0))*pow(2*(alpha*alpha*pow(r - r0,2)+ 1)*r*r, -0.5) |
                  -(alpha*(2*z - 2*z0))*pow(2*(alpha*alpha*pow(r - r0,2)+ 1)*r*r, -0.5)
      </secondary>
    </anasol>
  </poisson>


  <!--General - adaptive refinement parameters -->
  <adaptive>
    <maxstep>3</maxstep>
    <beta type="AVERAGE">100</beta>
    <maxdof>10000</maxdof>
    <errtol>0.000001</errtol>
    <knot_mult>1</knot_mult>
    <scheme>isotropic_function</scheme>
  </adaptive>

</simulation>
